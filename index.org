#+Title: Base de dados
#+AUTHOR: Luis Moura
#+Email: loumoura@gmail.com
#+DESCRIPTION: Base de dados de vários sectores
#+KEYWORDS:  org-mode
#+LANGUAGE:  portuguese
#+OPTIONS:   H:4 num:nil toc:2

# -*- mode: org; -*-

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>



#+HTML_HEAD: <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML"></script>
#+HTML_HEAD: <script type="text/x-mathjax-config">
#+HTML_HEAD: MathJax.Hub.Config({
#+HTML_HEAD: tex2jax: {inlineMath: [ ['$','$'], ["\\(","\\)"] ],displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
#+HTML_HEAD: processEscapes: true,processEnvironments: true },
#+HTML_HEAD:  displayAlign: 'center',
#+HTML_HEAD:  "HTML-CSS": { styles: {'.MathJax_Display': {"margin": 0}},linebreaks: { automatic: true }} }); </script>

#+OPTIONS: prop:("VERSION")
#+HTML_DOCTYPE: <!DOCTYPE html>

#+begin_src emacs-lisp :exports none
(org-babel-do-load-languages
 'org-babel-load-languages
  '( (R . t)         
     (python . t)
     (gnuplot . t)
     (ditaa . t)
     (calc . t)
     (emacs-lisp . t)   
   ))
#+end_src

#+RESULTS:
: ((R . t) (python . t) (gnuplot . t) (ditaa . t) (calc . t) (emacs-lisp . t))

SETUPFILE: styles/readtheorg/theme-readtheorg.setup




* Introduction

Welcome to Org Babel reference card.  It contains the reference documentation
that describes how to perform *code execution* within Org mode documents using Org
Babel 8.

In a nutshell, Org Babel is like Sweave but it takes
a *large number of possible languages* (C, Java, Python, Ruby, R, ...) and Org
mode can produce *HTML* as well as *PDF*.

#+begin_warning
Prolonged use may cause addiction!
#+end_warning


#+NAME: Import google data-seaborn plot
#+BEGIN_SRC python :results file :exports results
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="whitegrid", color_codes=True)

sns.set_context("paper")
plt.figure(figsize=(10, 6))

emp=pd.read_csv("https://docs.google.com/spreadsheets/d/1z0Gp-dBf3kSwOQhnjDU1GXYW4-oatmm389Z_kasBKTk/export?format=csv&id", 
			usecols=["Designação dos Trabalhos","Quantidade","Custo Unitário (euros)", "Fase", "Tipo"],
			index_col=["Designação dos Trabalhos"],
			header=0)
emp["Total (euros)"]=emp["Quantidade"]*emp["Custo Unitário (euros)"]
sns.factorplot(x="Tipo", y="Total (euros)",
               col="Fase", data=emp, kind="box", aspect=1)
plt.savefig('images/graph2.png')					
return 'images/graph2.png'
#+END_SRC

#+RESULTS: Import google data-seaborn plot
[[file:images/graph2.png]]


* Documentation

See h
